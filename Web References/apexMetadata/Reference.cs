//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3053.
// 
#pragma warning disable 1591

namespace basicSample_cs_p.apexMetadata {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MetadataBinding", Namespace="http://soap.sforce.com/2006/04/metadata")]
    public partial class MetadataService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private SessionHeader sessionHeaderValueField;
        
        private System.Threading.SendOrPostCallback checkStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MetadataService() {
            this.Url = global::basicSample_cs_p.Properties.Settings.Default.basicSample_cs_p_apexMetadata_MetadataService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public SessionHeader SessionHeaderValue {
            get {
                return this.sessionHeaderValueField;
            }
            set {
                this.sessionHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event checkStatusCompletedEventHandler checkStatusCompleted;
        
        /// <remarks/>
        public event createCompletedEventHandler createCompleted;
        
        /// <remarks/>
        public event deleteCompletedEventHandler deleteCompleted;
        
        /// <remarks/>
        public event updateCompletedEventHandler updateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.sforce.com/2006/04/metadata", ResponseNamespace="http://soap.sforce.com/2006/04/metadata", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public AsyncResult[] checkStatus([System.Xml.Serialization.XmlElementAttribute("asyncProcessId")] string[] asyncProcessId) {
            object[] results = this.Invoke("checkStatus", new object[] {
                        asyncProcessId});
            return ((AsyncResult[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincheckStatus(string[] asyncProcessId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("checkStatus", new object[] {
                        asyncProcessId}, callback, asyncState);
        }
        
        /// <remarks/>
        public AsyncResult[] EndcheckStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AsyncResult[])(results[0]));
        }
        
        /// <remarks/>
        public void checkStatusAsync(string[] asyncProcessId) {
            this.checkStatusAsync(asyncProcessId, null);
        }
        
        /// <remarks/>
        public void checkStatusAsync(string[] asyncProcessId, object userState) {
            if ((this.checkStatusOperationCompleted == null)) {
                this.checkStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckStatusOperationCompleted);
            }
            this.InvokeAsync("checkStatus", new object[] {
                        asyncProcessId}, this.checkStatusOperationCompleted, userState);
        }
        
        private void OncheckStatusOperationCompleted(object arg) {
            if ((this.checkStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkStatusCompleted(this, new checkStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.sforce.com/2006/04/metadata", ResponseNamespace="http://soap.sforce.com/2006/04/metadata", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public AsyncResult[] create([System.Xml.Serialization.XmlElementAttribute("metadata")] Metadata[] metadata) {
            object[] results = this.Invoke("create", new object[] {
                        metadata});
            return ((AsyncResult[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begincreate(Metadata[] metadata, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("create", new object[] {
                        metadata}, callback, asyncState);
        }
        
        /// <remarks/>
        public AsyncResult[] Endcreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AsyncResult[])(results[0]));
        }
        
        /// <remarks/>
        public void createAsync(Metadata[] metadata) {
            this.createAsync(metadata, null);
        }
        
        /// <remarks/>
        public void createAsync(Metadata[] metadata, object userState) {
            if ((this.createOperationCompleted == null)) {
                this.createOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOperationCompleted);
            }
            this.InvokeAsync("create", new object[] {
                        metadata}, this.createOperationCompleted, userState);
        }
        
        private void OncreateOperationCompleted(object arg) {
            if ((this.createCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCompleted(this, new createCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.sforce.com/2006/04/metadata", ResponseNamespace="http://soap.sforce.com/2006/04/metadata", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public AsyncResult[] delete([System.Xml.Serialization.XmlElementAttribute("metadata")] Metadata[] metadata) {
            object[] results = this.Invoke("delete", new object[] {
                        metadata});
            return ((AsyncResult[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Begindelete(Metadata[] metadata, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("delete", new object[] {
                        metadata}, callback, asyncState);
        }
        
        /// <remarks/>
        public AsyncResult[] Enddelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AsyncResult[])(results[0]));
        }
        
        /// <remarks/>
        public void deleteAsync(Metadata[] metadata) {
            this.deleteAsync(metadata, null);
        }
        
        /// <remarks/>
        public void deleteAsync(Metadata[] metadata, object userState) {
            if ((this.deleteOperationCompleted == null)) {
                this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
            }
            this.InvokeAsync("delete", new object[] {
                        metadata}, this.deleteOperationCompleted, userState);
        }
        
        private void OndeleteOperationCompleted(object arg) {
            if ((this.deleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompleted(this, new deleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("SessionHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.sforce.com/2006/04/metadata", ResponseNamespace="http://soap.sforce.com/2006/04/metadata", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("result")]
        public AsyncResult[] update([System.Xml.Serialization.XmlElementAttribute("UpdateMetadata")] UpdateMetadata[] UpdateMetadata) {
            object[] results = this.Invoke("update", new object[] {
                        UpdateMetadata});
            return ((AsyncResult[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginupdate(UpdateMetadata[] UpdateMetadata, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("update", new object[] {
                        UpdateMetadata}, callback, asyncState);
        }
        
        /// <remarks/>
        public AsyncResult[] Endupdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AsyncResult[])(results[0]));
        }
        
        /// <remarks/>
        public void updateAsync(UpdateMetadata[] UpdateMetadata) {
            this.updateAsync(UpdateMetadata, null);
        }
        
        /// <remarks/>
        public void updateAsync(UpdateMetadata[] UpdateMetadata, object userState) {
            if ((this.updateOperationCompleted == null)) {
                this.updateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateOperationCompleted);
            }
            this.InvokeAsync("update", new object[] {
                        UpdateMetadata}, this.updateOperationCompleted, userState);
        }
        
        private void OnupdateOperationCompleted(object arg) {
            if ((this.updateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCompleted(this, new updateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://soap.sforce.com/2006/04/metadata")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://soap.sforce.com/2006/04/metadata", IsNullable=false)]
    public partial class SessionHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string sessionIdField;
        
        /// <remarks/>
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public partial class UpdateMetadata {
        
        private string currentNameField;
        
        private Metadata metadataField;
        
        /// <remarks/>
        public string currentName {
            get {
                return this.currentNameField;
            }
            set {
                this.currentNameField = value;
            }
        }
        
        /// <remarks/>
        public Metadata metadata {
            get {
                return this.metadataField;
            }
            set {
                this.metadataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomField))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public partial class Metadata {
        
        private string fullNameField;
        
        /// <remarks/>
        public string fullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public partial class CustomObject : Metadata {
        
        private DeploymentStatus deploymentStatusField;
        
        private string descriptionField;
        
        private bool enableActivitiesField;
        
        private bool enableDivisionsField;
        
        private bool enableHistoryField;
        
        private bool enableReportsField;
        
        private System.Nullable<Gender> genderField;
        
        private bool genderFieldSpecified;
        
        private string labelField;
        
        private CustomField nameFieldField;
        
        private string pluralLabelField;
        
        private SharingModel sharingModelField;
        
        private System.Nullable<StartsWith> startsWithField;
        
        private bool startsWithFieldSpecified;
        
        /// <remarks/>
        public DeploymentStatus deploymentStatus {
            get {
                return this.deploymentStatusField;
            }
            set {
                this.deploymentStatusField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool enableActivities {
            get {
                return this.enableActivitiesField;
            }
            set {
                this.enableActivitiesField = value;
            }
        }
        
        /// <remarks/>
        public bool enableDivisions {
            get {
                return this.enableDivisionsField;
            }
            set {
                this.enableDivisionsField = value;
            }
        }
        
        /// <remarks/>
        public bool enableHistory {
            get {
                return this.enableHistoryField;
            }
            set {
                this.enableHistoryField = value;
            }
        }
        
        /// <remarks/>
        public bool enableReports {
            get {
                return this.enableReportsField;
            }
            set {
                this.enableReportsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<Gender> gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool genderSpecified {
            get {
                return this.genderFieldSpecified;
            }
            set {
                this.genderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public CustomField nameField {
            get {
                return this.nameFieldField;
            }
            set {
                this.nameFieldField = value;
            }
        }
        
        /// <remarks/>
        public string pluralLabel {
            get {
                return this.pluralLabelField;
            }
            set {
                this.pluralLabelField = value;
            }
        }
        
        /// <remarks/>
        public SharingModel sharingModel {
            get {
                return this.sharingModelField;
            }
            set {
                this.sharingModelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<StartsWith> startsWith {
            get {
                return this.startsWithField;
            }
            set {
                this.startsWithField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool startsWithSpecified {
            get {
                return this.startsWithFieldSpecified;
            }
            set {
                this.startsWithFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public enum DeploymentStatus {
        
        /// <remarks/>
        InDevelopment,
        
        /// <remarks/>
        Deployed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public enum Gender {
        
        /// <remarks/>
        Neuter,
        
        /// <remarks/>
        Masculine,
        
        /// <remarks/>
        Feminine,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public partial class CustomField : Metadata {
        
        private bool caseSensitiveField;
        
        private string defaultValueField;
        
        private string descriptionField;
        
        private string displayFormatField;
        
        private bool externalIdField;
        
        private string formulaField;
        
        private TreatBlanksAs formulaTreatBlanksAsField;
        
        private bool formulaTreatBlanksAsFieldSpecified;
        
        private string labelField;
        
        private int lengthField;
        
        private Picklist picklistField;
        
        private bool populateExistingRowsField;
        
        private int precisionField;
        
        private string referenceToField;
        
        private string relationshipNameField;
        
        private bool requiredField;
        
        private int scaleField;
        
        private int startingNumberField;
        
        private FieldType typeField;
        
        private bool uniqueField;
        
        private int visibleLinesField;
        
        /// <remarks/>
        public bool caseSensitive {
            get {
                return this.caseSensitiveField;
            }
            set {
                this.caseSensitiveField = value;
            }
        }
        
        /// <remarks/>
        public string defaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
            }
        }
        
        /// <remarks/>
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string displayFormat {
            get {
                return this.displayFormatField;
            }
            set {
                this.displayFormatField = value;
            }
        }
        
        /// <remarks/>
        public bool externalId {
            get {
                return this.externalIdField;
            }
            set {
                this.externalIdField = value;
            }
        }
        
        /// <remarks/>
        public string formula {
            get {
                return this.formulaField;
            }
            set {
                this.formulaField = value;
            }
        }
        
        /// <remarks/>
        public TreatBlanksAs formulaTreatBlanksAs {
            get {
                return this.formulaTreatBlanksAsField;
            }
            set {
                this.formulaTreatBlanksAsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool formulaTreatBlanksAsSpecified {
            get {
                return this.formulaTreatBlanksAsFieldSpecified;
            }
            set {
                this.formulaTreatBlanksAsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public int length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        public Picklist picklist {
            get {
                return this.picklistField;
            }
            set {
                this.picklistField = value;
            }
        }
        
        /// <remarks/>
        public bool populateExistingRows {
            get {
                return this.populateExistingRowsField;
            }
            set {
                this.populateExistingRowsField = value;
            }
        }
        
        /// <remarks/>
        public int precision {
            get {
                return this.precisionField;
            }
            set {
                this.precisionField = value;
            }
        }
        
        /// <remarks/>
        public string referenceTo {
            get {
                return this.referenceToField;
            }
            set {
                this.referenceToField = value;
            }
        }
        
        /// <remarks/>
        public string relationshipName {
            get {
                return this.relationshipNameField;
            }
            set {
                this.relationshipNameField = value;
            }
        }
        
        /// <remarks/>
        public bool required {
            get {
                return this.requiredField;
            }
            set {
                this.requiredField = value;
            }
        }
        
        /// <remarks/>
        public int scale {
            get {
                return this.scaleField;
            }
            set {
                this.scaleField = value;
            }
        }
        
        /// <remarks/>
        public int startingNumber {
            get {
                return this.startingNumberField;
            }
            set {
                this.startingNumberField = value;
            }
        }
        
        /// <remarks/>
        public FieldType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public bool unique {
            get {
                return this.uniqueField;
            }
            set {
                this.uniqueField = value;
            }
        }
        
        /// <remarks/>
        public int visibleLines {
            get {
                return this.visibleLinesField;
            }
            set {
                this.visibleLinesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public enum TreatBlanksAs {
        
        /// <remarks/>
        BlankAsBlank,
        
        /// <remarks/>
        BlankAsZero,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public partial class Picklist {
        
        private PicklistValue[] picklistValuesField;
        
        private bool sortedField;
        
        private bool useFirstValueAsDefaultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("picklistValues")]
        public PicklistValue[] picklistValues {
            get {
                return this.picklistValuesField;
            }
            set {
                this.picklistValuesField = value;
            }
        }
        
        /// <remarks/>
        public bool sorted {
            get {
                return this.sortedField;
            }
            set {
                this.sortedField = value;
            }
        }
        
        /// <remarks/>
        public bool useFirstValueAsDefault {
            get {
                return this.useFirstValueAsDefaultField;
            }
            set {
                this.useFirstValueAsDefaultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public partial class PicklistValue {
        
        private string labelField;
        
        private string valueField;
        
        /// <remarks/>
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public enum FieldType {
        
        /// <remarks/>
        AutoNumber,
        
        /// <remarks/>
        Lookup,
        
        /// <remarks/>
        MasterDetail,
        
        /// <remarks/>
        Checkbox,
        
        /// <remarks/>
        Currency,
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        DateTime,
        
        /// <remarks/>
        Email,
        
        /// <remarks/>
        Number,
        
        /// <remarks/>
        Percent,
        
        /// <remarks/>
        Phone,
        
        /// <remarks/>
        Picklist,
        
        /// <remarks/>
        MultiselectPicklist,
        
        /// <remarks/>
        Text,
        
        /// <remarks/>
        TextArea,
        
        /// <remarks/>
        LongTextArea,
        
        /// <remarks/>
        Url,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public enum SharingModel {
        
        /// <remarks/>
        Private,
        
        /// <remarks/>
        Read,
        
        /// <remarks/>
        ReadWrite,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public enum StartsWith {
        
        /// <remarks/>
        Consonant,
        
        /// <remarks/>
        Vowel,
        
        /// <remarks/>
        Special,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public partial class AsyncResult {
        
        private bool doneField;
        
        private string idField;
        
        private string messageField;
        
        private int secondsToWaitField;
        
        private AsyncRequestState stateField;
        
        private StatusCode statusCodeField;
        
        private bool statusCodeFieldSpecified;
        
        /// <remarks/>
        public bool done {
            get {
                return this.doneField;
            }
            set {
                this.doneField = value;
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public int secondsToWait {
            get {
                return this.secondsToWaitField;
            }
            set {
                this.secondsToWaitField = value;
            }
        }
        
        /// <remarks/>
        public AsyncRequestState state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public StatusCode statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusCodeSpecified {
            get {
                return this.statusCodeFieldSpecified;
            }
            set {
                this.statusCodeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public enum AsyncRequestState {
        
        /// <remarks/>
        Queued,
        
        /// <remarks/>
        InProgress,
        
        /// <remarks/>
        Completed,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/2006/04/metadata")]
    public enum StatusCode {
        
        /// <remarks/>
        ALREADY_IN_PROCESS,
        
        /// <remarks/>
        ASSIGNEE_TYPE_REQUIRED,
        
        /// <remarks/>
        BAD_CUSTOM_ENTITY_PARENT_DOMAIN,
        
        /// <remarks/>
        BCC_NOT_ALLOWED_IF_BCC_COMPLIANCE_ENABLED,
        
        /// <remarks/>
        CANNOT_CASCADE_PRODUCT_ACTIVE,
        
        /// <remarks/>
        CANNOT_CHANGE_FIELD_TYPE_OF_APEX_REFERENCED_FIELD,
        
        /// <remarks/>
        CANNOT_CREATE_ANOTHER_MANAGED_PACKAGE,
        
        /// <remarks/>
        CANNOT_DEACTIVATE_DIVISION,
        
        /// <remarks/>
        CANNOT_DELETE_LAST_DATED_CONVERSION_RATE,
        
        /// <remarks/>
        CANNOT_DELETE_MANAGED_OBJECT,
        
        /// <remarks/>
        CANNOT_DISABLE_LAST_ADMIN,
        
        /// <remarks/>
        CANNOT_ENABLE_IP_RESTRICT_REQUESTS,
        
        /// <remarks/>
        CANNOT_INSERT_UPDATE_ACTIVATE_ENTITY,
        
        /// <remarks/>
        CANNOT_MODIFY_MANAGED_OBJECT,
        
        /// <remarks/>
        CANNOT_RENAME_APEX_REFERENCED_FIELD,
        
        /// <remarks/>
        CANNOT_RENAME_APEX_REFERENCED_OBJECT,
        
        /// <remarks/>
        CANNOT_REPARENT_RECORD,
        
        /// <remarks/>
        CANNOT_RESOLVE_NAME,
        
        /// <remarks/>
        CANNOT_UPDATE_CONVERTED_LEAD,
        
        /// <remarks/>
        CANT_DISABLE_CORP_CURRENCY,
        
        /// <remarks/>
        CANT_UNSET_CORP_CURRENCY,
        
        /// <remarks/>
        CHILD_SHARE_FAILS_PARENT,
        
        /// <remarks/>
        CIRCULAR_DEPENDENCY,
        
        /// <remarks/>
        CUSTOM_CLOB_FIELD_LIMIT_EXCEEDED,
        
        /// <remarks/>
        CUSTOM_ENTITY_OR_FIELD_LIMIT,
        
        /// <remarks/>
        CUSTOM_FIELD_INDEX_LIMIT_EXCEEDED,
        
        /// <remarks/>
        CUSTOM_INDEX_EXISTS,
        
        /// <remarks/>
        CUSTOM_LINK_LIMIT_EXCEEDED,
        
        /// <remarks/>
        CUSTOM_TAB_LIMIT_EXCEEDED,
        
        /// <remarks/>
        DELETE_FAILED,
        
        /// <remarks/>
        DELETE_REQUIRED_ON_CASCADE,
        
        /// <remarks/>
        DEPENDENCY_EXISTS,
        
        /// <remarks/>
        DUPLICATE_CASE_SOLUTION,
        
        /// <remarks/>
        DUPLICATE_CUSTOM_ENTITY_DEFINITION,
        
        /// <remarks/>
        DUPLICATE_CUSTOM_TAB_MOTIF,
        
        /// <remarks/>
        DUPLICATE_DEVELOPER_NAME,
        
        /// <remarks/>
        DUPLICATE_EXTERNAL_ID,
        
        /// <remarks/>
        DUPLICATE_MASTER_LABEL,
        
        /// <remarks/>
        DUPLICATE_USERNAME,
        
        /// <remarks/>
        DUPLICATE_VALUE,
        
        /// <remarks/>
        EMAIL_NOT_PROCESSED_DUE_TO_PRIOR_ERROR,
        
        /// <remarks/>
        EMPTY_SCONTROL_FILE_NAME,
        
        /// <remarks/>
        ENTITY_FAILED_IFLASTMODIFIED_ON_UPDATE,
        
        /// <remarks/>
        ENTITY_IS_ARCHIVED,
        
        /// <remarks/>
        ENTITY_IS_DELETED,
        
        /// <remarks/>
        ENTITY_IS_LOCKED,
        
        /// <remarks/>
        ERROR_IN_MAILER,
        
        /// <remarks/>
        FAILED_ACTIVATION,
        
        /// <remarks/>
        FIELD_CUSTOM_VALIDATION_EXCEPTION,
        
        /// <remarks/>
        FIELD_INTEGRITY_EXCEPTION,
        
        /// <remarks/>
        HTML_FILE_UPLOAD_NOT_ALLOWED,
        
        /// <remarks/>
        IMAGE_TOO_LARGE,
        
        /// <remarks/>
        INACTIVE_OWNER_OR_USER,
        
        /// <remarks/>
        INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY,
        
        /// <remarks/>
        INSUFFICIENT_ACCESS_OR_READONLY,
        
        /// <remarks/>
        INVALID_ACCESS_LEVEL,
        
        /// <remarks/>
        INVALID_ARGUMENT_TYPE,
        
        /// <remarks/>
        INVALID_ASSIGNEE_TYPE,
        
        /// <remarks/>
        INVALID_ASSIGNMENT_RULE,
        
        /// <remarks/>
        INVALID_BATCH_OPERATION,
        
        /// <remarks/>
        INVALID_CREDIT_CARD_INFO,
        
        /// <remarks/>
        INVALID_CROSS_REFERENCE_KEY,
        
        /// <remarks/>
        INVALID_CROSS_REFERENCE_TYPE_FOR_FIELD,
        
        /// <remarks/>
        INVALID_CURRENCY_CONV_RATE,
        
        /// <remarks/>
        INVALID_CURRENCY_CORP_RATE,
        
        /// <remarks/>
        INVALID_CURRENCY_ISO,
        
        /// <remarks/>
        INVALID_EMAIL_ADDRESS,
        
        /// <remarks/>
        INVALID_EMPTY_KEY_OWNER,
        
        /// <remarks/>
        INVALID_FIELD,
        
        /// <remarks/>
        INVALID_FIELD_FOR_INSERT_UPDATE,
        
        /// <remarks/>
        INVALID_FILTER_ACTION,
        
        /// <remarks/>
        INVALID_ID_FIELD,
        
        /// <remarks/>
        INVALID_INET_ADDRESS,
        
        /// <remarks/>
        INVALID_LINEITEM_CLONE_STATE,
        
        /// <remarks/>
        INVALID_MASTER_OR_TRANSLATED_SOLUTION,
        
        /// <remarks/>
        INVALID_OPERATION,
        
        /// <remarks/>
        INVALID_OPERATOR,
        
        /// <remarks/>
        INVALID_OR_NULL_FOR_RESTRICTED_PICKLIST,
        
        /// <remarks/>
        INVALID_PARTNER_NETWORK_STATUS,
        
        /// <remarks/>
        INVALID_PERSON_ACCOUNT_OPERATION,
        
        /// <remarks/>
        INVALID_SAVE_AS_ACTIVITY_FLAG,
        
        /// <remarks/>
        INVALID_STATUS,
        
        /// <remarks/>
        INVALID_TYPE,
        
        /// <remarks/>
        INVALID_TYPE_FOR_OPERATION,
        
        /// <remarks/>
        INVALID_TYPE_ON_FIELD_IN_RECORD,
        
        /// <remarks/>
        IP_RANGE_LIMIT_EXCEEDED,
        
        /// <remarks/>
        LAST_MODIFIED_SINCE_TOO_OLD,
        
        /// <remarks/>
        LICENSE_LIMIT_EXCEEDED,
        
        /// <remarks/>
        LIMIT_EXCEEDED,
        
        /// <remarks/>
        MALFORMED_ID,
        
        /// <remarks/>
        MANAGER_NOT_DEFINED,
        
        /// <remarks/>
        MASSMAIL_RETRY_LIMIT_EXCEEDED,
        
        /// <remarks/>
        MASS_MAIL_LIMIT_EXCEEDED,
        
        /// <remarks/>
        MAXIMUM_CCEMAILS_EXCEEDED,
        
        /// <remarks/>
        MAXIMUM_DASHBOARD_COMPONENTS_EXCEEDED,
        
        /// <remarks/>
        MAXIMUM_SIZE_OF_ATTACHMENT,
        
        /// <remarks/>
        MAXIMUM_SIZE_OF_DOCUMENT,
        
        /// <remarks/>
        MAX_ACTIONS_PER_RULE_EXCEEDED,
        
        /// <remarks/>
        MAX_ACTIVE_RULES_EXCEEDED,
        
        /// <remarks/>
        MAX_APPROVAL_STEPS_EXCEEDED,
        
        /// <remarks/>
        MAX_FORMULAS_PER_RULE_EXCEEDED,
        
        /// <remarks/>
        MAX_RULES_EXCEEDED,
        
        /// <remarks/>
        MAX_RULE_ENTRIES_EXCEEDED,
        
        /// <remarks/>
        MAX_TASK_DESCRIPTION_EXCEEEDED,
        
        /// <remarks/>
        MAX_TM_RULES_EXCEEDED,
        
        /// <remarks/>
        MAX_TM_RULE_ITEMS_EXCEEDED,
        
        /// <remarks/>
        MISSING_ARGUMENT,
        
        /// <remarks/>
        NONUNIQUE_SHIPPING_ADDRESS,
        
        /// <remarks/>
        NO_APPLICABLE_PROCESS,
        
        /// <remarks/>
        NO_MASS_MAIL_PERMISSION,
        
        /// <remarks/>
        NUMBER_OUTSIDE_VALID_RANGE,
        
        /// <remarks/>
        NUM_HISTORY_FIELDS_BY_SOBJECT_EXCEEDED,
        
        /// <remarks/>
        OPTED_OUT_OF_MASS_MAIL,
        
        /// <remarks/>
        PACKAGE_LICENSE_REQUIRED,
        
        /// <remarks/>
        PORTAL_USER_ALREADY_EXISTS_FOR_CONTACT,
        
        /// <remarks/>
        PRIVATE_CONTACT_ON_ASSET,
        
        /// <remarks/>
        PROV_APEX_CALC_ERROR,
        
        /// <remarks/>
        PROV_INVALID_EDITION_CHANGE,
        
        /// <remarks/>
        PROV_INVALID_ENTITLEMENT_STATUS,
        
        /// <remarks/>
        PROV_INVALID_ORG,
        
        /// <remarks/>
        PROV_INVALID_STATUS_CHANGE,
        
        /// <remarks/>
        PROV_LICENSE_LIMIT_EXCEEDED,
        
        /// <remarks/>
        PROV_NO_ACCESS,
        
        /// <remarks/>
        PROV_ORG_VALUES_EXCEEDED,
        
        /// <remarks/>
        PROV_PACKAGE_NOT_PROVISIONABLE,
        
        /// <remarks/>
        PROV_UNKNOWN_ERROR,
        
        /// <remarks/>
        PROV_UNKNOWN_FEATURE_LICENSE,
        
        /// <remarks/>
        PROV_UNKNOWN_USER_LICENSE,
        
        /// <remarks/>
        RECORD_IN_USE_BY_WORKFLOW,
        
        /// <remarks/>
        REQUIRED_FIELD_MISSING,
        
        /// <remarks/>
        SHARE_NEEDED_FOR_CHILD_OWNER,
        
        /// <remarks/>
        STANDARD_PRICE_NOT_DEFINED,
        
        /// <remarks/>
        STORAGE_LIMIT_EXCEEDED,
        
        /// <remarks/>
        TABSET_LIMIT_EXCEEDED,
        
        /// <remarks/>
        TEMPLATE_NOT_ACTIVE,
        
        /// <remarks/>
        TERRITORY_REALIGN_IN_PROGRESS,
        
        /// <remarks/>
        TEXT_DATA_OUTSIDE_SUPPORTED_CHARSET,
        
        /// <remarks/>
        TOO_MANY_ENUM_VALUE,
        
        /// <remarks/>
        TRANSFER_REQUIRES_READ,
        
        /// <remarks/>
        UNABLE_TO_LOCK_ROW,
        
        /// <remarks/>
        UNAVAILABLE_RECORDTYPE_EXCEPTION,
        
        /// <remarks/>
        UNDELETE_FAILED,
        
        /// <remarks/>
        UNKNOWN_EXCEPTION,
        
        /// <remarks/>
        UNSPECIFIED_EMAIL_ADDRESS,
        
        /// <remarks/>
        UNSUPPORTED_APEX_TRIGGER_OPERATON,
        
        /// <remarks/>
        WEBLINK_SIZE_LIMIT_EXCEEDED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void checkStatusCompletedEventHandler(object sender, checkStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AsyncResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AsyncResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void createCompletedEventHandler(object sender, createCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AsyncResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AsyncResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void deleteCompletedEventHandler(object sender, deleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AsyncResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AsyncResult[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void updateCompletedEventHandler(object sender, updateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AsyncResult[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AsyncResult[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591